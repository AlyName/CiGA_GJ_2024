
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class cardEffect : Luban.BeanBase
{
    public cardEffect(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["white_effect"].IsString) { throw new SerializationException(); }  WhiteEffect = _buf["white_effect"]; }
        { var __json0 = _buf["white_param"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; WhiteParam = new float[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { float __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  WhiteParam[__index0++] = __v0; }   }
        { var __json0 = _buf["bule_param"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; BuleParam = new float[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { float __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  BuleParam[__index0++] = __v0; }   }
        { var __json0 = _buf["purple_param"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; PurpleParam = new float[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { float __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  PurpleParam[__index0++] = __v0; }   }
        { var __json0 = _buf["orange_param"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; OrangeParam = new float[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { float __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  OrangeParam[__index0++] = __v0; }   }
    }

    public static cardEffect DeserializecardEffect(JSONNode _buf)
    {
        return new cardEffect(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 卡牌名称
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 白色效果描述, 这样写技能描述就可以使用string.Format
    /// </summary>
    public readonly string WhiteEffect;
    /// <summary>
    /// 白色效果参数
    /// </summary>
    public readonly float[] WhiteParam;
    /// <summary>
    /// 蓝色效果参数
    /// </summary>
    public readonly float[] BuleParam;
    /// <summary>
    /// 紫色效果参数
    /// </summary>
    public readonly float[] PurpleParam;
    /// <summary>
    /// 橙色效果参数
    /// </summary>
    public readonly float[] OrangeParam;
   
    public const int __ID__ = 236295361;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "whiteEffect:" + WhiteEffect + ","
        + "whiteParam:" + Luban.StringUtil.CollectionToString(WhiteParam) + ","
        + "buleParam:" + Luban.StringUtil.CollectionToString(BuleParam) + ","
        + "purpleParam:" + Luban.StringUtil.CollectionToString(PurpleParam) + ","
        + "orangeParam:" + Luban.StringUtil.CollectionToString(OrangeParam) + ","
        + "}";
    }
}

}
